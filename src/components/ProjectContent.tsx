'use client';

import React from 'react';

// –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤
const PROJECT_CONTENTS: Record<string, string> = {
	'ugh-okay': `üì± Ugh Okay ‚Äî The Button That Saves Your Brain
üöÄ About the Project
A tiny mobile app to fight doomscrolling.
One button. One random task. A slightly better day.
Built during a real-life procrastination spiral.

üî• The Problem
Most productivity apps are too overwhelming when you're stuck in paralysis.
Ugh Okay offers one small action ‚Äî no pressure, no guilt, no endless checklists.

üõ†Ô∏è The Solution
Preloaded activities (or add your own)
Tap when stuck
Get a random task suggestion
Tap again if you don't like it
Remove tasks you hate forever
Fully offline. No accounts. No tracking.
Language switch between English and Russian.

üìà Tech Stack
Built with React Native (Expo)
AsyncStorage for persistent local data
No backend, fully offline
i18n for multi-language support

üß† Product Philosophy
Minimalism over features
Sarcasm over self-improvement guilt
Action over anxiety

‚ú® Key Features
üîí 100% Offline, Private
üéØ Focused on Action, Not Planning
üîÑ Randomized Suggestions
üá¨üáßüá∑üá∫ Language Switching
üßπ No Ads, No Tracking, No Push Notifications

üîÆ What's Next
Widget support for even faster access
"Hard mode" (you MUST do the first suggestion)
Mini insights: track tiny victories

üì∏ Screenshots
[IMAGE_GALLERY]

üß™ Behind the Scenes
Designed in Figma in one evening.
Copywriting and button ideas brainstormed with ChatGPT.
Built over a few lazy weekends.
Launched on IndieHackers and ProductHunt for fun, not fame.

üöÄ Try It
Download on App Store or Google Play.
Or, you know... keep doomscrolling. (No pressure.)`,
	'zentava': `üßò Zentava ‚Äî Your Personal AI Mentor
üöÄ About the Project
Zentava is an AI-powered mentor designed to support your personal growth, emotional balance, and decision-making clarity.

Built to provide encouragement and tailored advice through natural conversations ‚Äî anytime you need a nudge forward.

üî• The Problem
Self-improvement tools often feel cold, overwhelming, or judgmental.

Zentava offers warm, non-judgmental AI conversations that prioritize your mental well-being and real-world momentum.

üõ†Ô∏è The Solution

Set personal goals or simply talk things out

Personalized AI feedback using ChatGPT

Track your emotional state and progress

Designed for clarity, not complexity

üìà Tech Stack

Frontend: Next.js

Backend: Node.js + MongoDB

Authentication: Firebase Auth

AI Layer: OpenAI ChatGPT API

üß† Product Philosophy

Growth without pressure

Conversations over endless to-do lists

Progress over perfection

‚ú® Key Features
üîí Private, Secure Conversations
üßò Personalized Mentorship with AI
üìà Light Progress Tracking
üéØ Focused on Mental Clarity and Growth
üåê Multi-language support (EN, RU, ES)

üîÆ What's Next

Full public launch after private beta

Expanded conversation topics

Deeper emotional tracking features

üì∏ Screenshots
Landing page
Onboarding / Sign-in
Conversation screen (prototype)
User dashboard (WIP)

üß™ Behind the Scenes
Initial idea prototyped over a few intense coffee-fueled nights.
Tested with early users through invite-only beta.
Feedback loop driven by real conversations and actual user struggles.

üöÄ Try It
Sign up for the waitlist at Zentava.life and be among the first to meet your AI mentor.`,
	'santa-maria-dashboard': `üè• Santa Maria ‚Äî Health Management Platform
üöÄ About the Project
A full-featured web system for clinics to manage patient bookings, treatment schedules, medical records, and financial operations ‚Äî all in one place.

Built for real-world clinic workflows, not just theoretical "best practices."

üî• The Problem
Traditional clinic software is either outdated, overly complicated, or requires expensive customization.

Santa Maria Dashboard was created to deliver a flexible, modern, all-in-one system tailored for everyday use by doctors, staff, and administrators.

üõ†Ô∏è The Solution

Appointment scheduling and patient booking

Medical treatment tracking and exam records

Invoice management and financial reporting

Multi-role access system (admin, doctor, accountant)

Internal analytics dashboards

üìà Tech Stack

Frontend: Angular

Backend: Node.js + Express

Database: MongoDB

Authentication: Firebase Auth

Hosting: Dedicated cloud servers

üß† Product Philosophy

Practicality over bells and whistles

Clear workflows for medical and administrative staff

Scalability for growing clinic networks

‚ú® Key Features
üìÖ Advanced Appointment Scheduling
üìã Full Patient Medical Records
üí≥ Invoice and Payment Management
üßë‚Äç‚öïÔ∏è Multi-Role Permissions System
üìä Operational Dashboards and Analytics
üåê Language Support (Multilingual ready)

üîÆ What's Next

Patient portal for online booking and personal records

Integration with insurance providers

Mobile app expansion

üì∏ Screenshots
Admin Dashboard overview
Appointment scheduling module
Patient profile and treatment history
Financial analytics reports

üß™ Behind the Scenes
Designed from real clinical requirements after consulting with medical practitioners.
Iteratively improved based on feedback from actual clinic operations.
Built under NDA ‚Äî client details confidential.

üöÄ Try It
Currently deployed and in daily use by private medical centers.
Demo access available upon request.`,
	'extenswitch': `üß© ExtenSwitch ‚Äî One-Click Chrome Extension Manager
üöÄ About the Project
A minimalistic Chrome extension for instantly enabling or disabling other extensions with a single click ‚Äî perfect for crypto wallets, dev tools, or any cluttered browser setup.

Built out of frustration with endless trips to Chrome settings.

üî• The Problem
Managing multiple Chrome extensions (especially wallets, tools, and plugins) is a hassle.
Chrome's built-in UI for enabling/disabling is slow and buried deep in menus.

üõ†Ô∏è The Solution

One-click toggle for all your installed extensions

Smart filters: view All, Enabled, or Disabled extensions

Lightweight popup interface

Focused on speed and zero-friction UX

üìà Tech Stack

Manifest v3 (Chrome Extensions API)

Vanilla JavaScript + HTML + TailwindCSS

No external dependencies

Minimal local storage usage

üß† Product Philosophy

Speed over complexity

Local-only operation (no backend)

Built to solve a real daily irritation

‚ú® Key Features
‚ö° Instant Toggle of Extensions
üßπ Declutter Your Browser in Seconds
üîé Filter by Enabled/Disabled Status
üîí No Data Collection or Tracking

üîÆ What's Next

Group extensions into custom sets

Quick-enable profiles (e.g., "Crypto Work Mode" vs "Gaming Mode")

Dark theme for popup UI

üì∏ Screenshots
Main popup view with extensions
Enabled/disabled filter example
Settings and management screen (minimal)

üß™ Behind the Scenes
Built in a weekend sprint to scratch an itch.
Inspired by juggling too many crypto wallets and dev tools.
Currently available on Chrome Web Store (pending review).

üöÄ Try It
Install on Chrome and experience instant control over your extensions!`
};

interface ProjectContentProps {
	projectId: string;
	isModal?: boolean;
}

// –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ –µ–≥–æ id
export const getProjectContent = (projectId: string): { title: string; content: string } => {
	if (PROJECT_CONTENTS[projectId]) {
		return {
			title: `${projectId.charAt(0).toUpperCase() + projectId.slice(1).replace(/-/g, ' ')} ‚Äî Project Details`,
			content: PROJECT_CONTENTS[projectId]
		};
	}

	// –ö–æ–Ω—Ç–µ–Ω—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
	return {
		title: `${projectId.charAt(0).toUpperCase() + projectId.slice(1).replace(/-/g, ' ')} ‚Äî Project Details`,
		content: "Detailed information about this project is coming soon."
	};
};

const ProjectContent: React.FC<ProjectContentProps> = ({ projectId, isModal = false }) => {
	const { content } = getProjectContent(projectId);

	const formatContent = (text: string) => {
		// –†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ —Å—Ç—Ä–æ–∫–∏
		const lines = text.split('\n');

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –º–∞—Ä–∫–µ—Ä –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
		const hasImageGallery = lines.some(line => line.includes('[IMAGE_GALLERY]'));

		// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É
		const formattedLines = lines.map((line, index) => {
			// –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç—Ä–æ–∫—É —Å –º–∞—Ä–∫–µ—Ä–æ–º –≥–∞–ª–µ—Ä–µ–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
			if (line.includes('[IMAGE_GALLERY]')) {
				return null;
			}

			// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å —ç–º–æ–¥–∑–∏
			if (line.match(/^üöÄ|^üî•|^üõ†Ô∏è|^üìà|^üß†|^‚ú®|^üîÆ|^üì∏|^üß™|^üöÄ/)) {
				return <h3 key={index} className="text-xl font-bold mt-6 mb-3 text-lab-cyan portfolio:text-indigo-700">{line}</h3>;
			}

			// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
			if (line.match(/^üì±|^üè•|^üß©/)) {
				return <h2 key={index} className="text-2xl font-bold mb-4 text-lab-purple portfolio:text-indigo-800">{line}</h2>;
			}

			// –ü—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –æ—Ç—Å—Ç—É–ø—ã
			if (line.trim() === '') {
				return <div key={index} className="h-2"></div>;
			}

			// –û–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç
			return <p key={index} className={`mb-2 ${isModal ? 'text-lab-text' : 'text-lab-text'}`}>{line}</p>;
		}).filter(Boolean);

		// –î–ª—è –ø—Ä–æ–µ–∫—Ç–∞ UghOkay –¥–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –µ—Å—Ç—å –º–∞—Ä–∫–µ—Ä
		if (projectId === 'ugh-okay' && hasImageGallery) {
			// –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å –∑–∞–≥–æ–ª–æ–≤–∫–∞ "Screenshots"
			const screenshotsIndex = formattedLines.findIndex(
				(el) => React.isValidElement(el) &&
					el.type === 'h3' &&
					typeof el.props === 'object' &&
					el.props !== null &&
					'children' in el.props &&
					typeof el.props.children === 'string' &&
					el.props.children.includes('Screenshots')
			);

			if (screenshotsIndex !== -1) {
				// –í—Å—Ç–∞–≤–ª—è–µ–º –≥–∞–ª–µ—Ä–µ—é –ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
				formattedLines.splice(screenshotsIndex + 1, 0, (
					<div key="image-gallery" className="mt-4 mb-6 grid grid-cols-3 gap-4">
						<div className="overflow-hidden rounded-lg">
							<img
								src="/images/projects/UghOkay/UghOkay-Prod-1320-2868-Screen3.jpg"
								alt="UghOkay Screenshot 1"
								className="w-full h-auto rounded-lg shadow-md"
							/>
						</div>
						<div className="overflow-hidden rounded-lg">
							<img
								src="/images/projects/UghOkay/UghOkay-Prod-1320-2868-Screen4.jpg"
								alt="UghOkay Screenshot 2"
								className="w-full h-auto rounded-lg shadow-md"
							/>
						</div>
						<div className="overflow-hidden rounded-lg">
							<img
								src="/images/projects/UghOkay/UghOkay-Prod-1320-2868-Screen5.jpg"
								alt="UghOkay Screenshot 3"
								className="w-full h-auto rounded-lg shadow-md"
							/>
						</div>
					</div>
				));
			}
		}

		return formattedLines;
	};

	return <div className="project-content">{formatContent(content)}</div>;
};

export default ProjectContent; 